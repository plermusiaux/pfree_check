CONSTRUCTORS

true : Bool
false : Bool

A : Value
B : Value

cons : Value * List -> List
nil : List

FUNCTIONS

eq : Value [- A()] * Value [- A()] -> Bool [- false()]
   | Value [- B()] * Value [- B()] -> Bool [- false()]
   | Value [- A()] * Value [- B()] -> Bool [- true()]
   | Value [- B()] * Value [- A()] -> Bool [- true()]

delete : Value [- A()] * List -> List [- cons(B(), l)]
       | Value [- B()] * List -> List [- cons(A(), l)]

ite : Bool [- false()] * List [- cons(A(), l)] * List -> List [- cons(A(), l)]
    | Bool [- false()] * List [- cons(B(), l)] * List -> List [- cons(B(), l)]
    | Bool [- true()] * List * List [- cons(A(), l)] -> List [- cons(A(), l)]
    | Bool [- true()] * List * List [- cons(B(), l)] -> List [- cons(B(), l)]

RULES

delete(x, cons(y@(A()+B()), l)) -> ite(eq(x, y), delete(x, l), cons(y, delete(x, l)))
delete(v, nil()) -> nil()

ite(true(), l1, l2) -> l1
ite(false(), l1, l2) -> l2
